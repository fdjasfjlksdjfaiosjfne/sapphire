{
    "$schema": "https://json-schema.org/draft-07/schema#",
    "title": "Redefinition",
    "type": "object",
    "description": "An category containing possible overrides for certain symbols and keywords in the language.\n",
    "properties": {
        "controlFlow": {"$ref": "customization/redefine/control.schema.json"},
        "operators": {"$ref": "customization/redefine/operators.schema.json"},
        "comments": {
            "singleLineComment": {
                "type": ["string", "null"],
                "enum": ["#", "//", ";", "--", "%", null],
                "enumDescriptions": [
                    "Use by Python, Powershell, Ruby, Bash, Perl, Julia, YAML, TOML, CoffeeScript and R, among others",
                    "Use by most C-styled languages. Note that, since this symbol matches the default floor division operator, you'd need to either redefine or disable it.",
                    "Use by Assembly and AutoHotKey. Note that, since this symbol matches the default modulus operator, you'd need to either redefine or disable it.",
                    "Use by Haskell and Lua",
                    "Use by MATLAB",
                    "Diasble single-line comments entirely"
                ]
            },
            "multiLineComment": {
                "type": ["string", "null"],
                "enum": [
                    "/* */", "### ###", "#= =#",
                    "#* *#", "(* *)",
                    "<!-- -->", "{# #}", "{{!-- --}}",
                    "{{-- --}}", "--[[ ]]", "#| |#",
                    "%{ }%", null
                ],
                "enumDescriptions": [
                    "Use by most languages",
                    "Use by CoffeeScript",
                    "Use by Julia",
                    "Use by Velocity",
                    "Use by F#",
                    "Use by HTML, Markdown, XML among others",
                    "Use by Django, Genshi (not to be confused with Genshin) and Jinja",
                    "Use by Handlebars",
                    "Use by Laravel",
                    "Use by Lua",
                    "Use by Lisp",
                    "Use by MATLAB",
                    "Disable multi-line comments entirely"
                ],
                "default": "/* */"
            }
        },
        "literals": {
            "true": {
                "type": "string",
                "description": "Note: \n1. This option will be ignored if 'languageCustomization.allowBooleans' is set to false\n2. If 'languageCustomization.caseInsensitiveBooleans' is disabled, certain options allowed will act identically",
                "enum": ["true", "True", "TRUE", "yes", "Yes", "y", "Y", "Affirmative", "ye", "yup", "yay"],
                "enumDescriptions": [
                    "The standard notation, use in most languages",
                    "Use by Python",
                    "Use by Excel",
                    "Use as a alternate way of saying 'true' by YAML",
                    "Use as a alternate way of saying 'true' by YAML",
                    "Use as a alternate way of saying 'true' by YAML",
                    "Use as a alternate way of saying 'true' by YAML",
                    "A polite way of saying 'true'",
                    "An informal way of saying 'true'",
                    "An informal way of saying 'true'",
                    "An informal way of saying 'true'"
                ],
                "default": "true"
            },
            "false": {
                "type": "string",
                "description": "Note: \n1. This option will be ignored if 'languageCustomization.allowBooleans' is set to false\n2. If 'languageCustomization.caseInsensitiveBooleans' is disabled, certain options allowed will act identically",
                "enum": ["false", "False", "FALSE", "no", "No", "n", "N", "Negative", "nah", "nope", "nay"],
                "enumDescriptions": [
                    "The standard notation, use in most languages",
                    "Use by Python",
                    "Use by Excel",
                    "Use as a alternate way of saying 'false' by YAML",
                    "Use as a alternate way of saying 'false' by YAML",
                    "Use as a alternate way of saying 'false' by YAML",
                    "Use as a alternate way of saying 'false' by YAML",
                    "A polite way of saying 'false'",
                    "An informal way of saying 'false'",
                    "An informal way of saying 'false'",
                    "An informal way of saying 'false'"
                ],
                "default": "false"
            },
            "null": {
                "type": "string",
                "description": "Note: \n1. This option will be ignored if 'languageCustomization.allowNull' is set to false\n2. If 'languageCustomization.caseInsensitiveNull' is disabled, certain options allowed will act identically",
                "enum": ["null", "Null", "NULL", "None", "none", "NOTHING", "nothing", "Nothing", "undefined", "nil"],
                "enumDescriptions": [
                    "The standard notation, use in most languages",
                    "The standard notation with a different casing",
                    "The standard notation with a different casing",
                    "Use by Python",
                    "Python's notation with a different casing",
                    "Python's notation with a different casing",
                    "An alternate way of spelling 'null'",
                    "An alternate way of spelling 'null'",
                    "An alternate way of spelling 'null'",
                    "An alternate way of spelling 'null'",
                    "Use by Ruby"
                ],
                "default": "null"
            }
        }
    },
    "additionalProperties": false

}